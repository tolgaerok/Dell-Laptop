# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot = {

    extraModulePackages = [ ];
    initrd.kernelModules = [ ];
    kernelModules = [ "kvm-intel" ];
    kernelParams = [ "mitigations=off" ];
    initrd.availableKernelModules = [
      "ahci"
      "ehci_pci"
      "sd_mod"
      "sdhci_pci"
      "uas"
      "usb_storage"
      "usbhid"
      "xhci_pci"
    ];
  };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/cd7ffd2f-d27c-4622-b677-b07f35c14b4a";
      fsType = "ext4";

    #---------------------------------------------------------------------
    # Optimize SSD
    #---------------------------------------------------------------------
    options = [
      "data=ordered"
      "discard"
      "errors=remount-ro"
      "noatime"
      "nodiratime"
    ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/5880-23ED";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/638f96cc-db08-4f4f-b804-fe429baf7e4b"; }
    ];

 # fileSystems."/mnt/nixos_share" = {
 #   device = "//192.168.0.20/LinuxData/HOME/PROFILES/NIXOS-23-05/TOLGA/";
 #   fsType = "cifs";
 #   options = let
 #     automountOpts =
 #       "x-systemd.automount,noauto,x-systemd.idle-timeout=60,x-systemd.device-timeout=5s,x-systemd.mount-timeout=5s,x-systemd.requires=network.target";
 #     uid =
 #       "1000"; # Replace with your actual user ID, use `id -u <YOUR USERNAME>` to get your user ID
 #     gid =
 #       "100"; # Replace with your actual group ID, use `id -g <YOUR USERNAME>` to get your group ID
 #     vers = "3.1.1";
 #     cacheOpts = "cache=loose";
 #     credentialsPath = "/etc/nixos/core/system/network/smb-secrets";
 #   in [
 #     "${automountOpts},credentials=${credentialsPath},uid=${uid},gid=${gid},vers=${vers},${cacheOpts}"
 #  ];
 # };


  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s25.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}
